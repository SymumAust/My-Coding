/*DON'T DELETE ANY GIVEN COMMENT,
WRITE YOUR CODE FROM THE NEXT LINE
OF THE GIVEN COMMENT*/
#include<bits/stdc++.h>
using namespace std;

struct Node
{
    int data;
    Node* next;
};

Node* createList(int arr[],int len)
{
    Node* hd = new Node();
    hd->data = arr[0];
    hd->next = NULL;

    Node* temp = hd;

    for (int i = 1; i < len; i++)
    {
        Node* newNode = new Node();
        newNode->data = arr[i];
        newNode->next = NULL;

        temp->next = newNode;
        temp = newNode;
    }
    return hd;
}
Node* sortedMerge(Node* list1, Node* list2)
{
    //write your code from below
    struct Node *temp11=list1;
    struct Node *temp1 =list2;
    struct Node *temp;
    Node *head =NULL;
    Node *head2 =NULL;
    Node *head3 =NULL;

    int tempvalue;

    temp = (struct Node*)malloc(sizeof(struct Node));
    temp->data =   temp11->data+ temp1->data ;
    temp->next= head;
    head= temp;

    tempvalue = temp->data;
    temp11= temp11->next;
    temp1=temp1->next;
    int c=0,co=0;
    while(list1!=NULL)
    {
        co++;
        list1=list1->next;
    }
    while(list2!=NULL)
    {
        c++;
        list2 = list2->next;
    }
    int n;

    if(co>=c)
    {
        n= co;
    }
    else
        n=c;


    while ( n>0)
    {
        n--;
        if(temp1==NULL)
        {
            temp1 = (struct Node*)malloc(sizeof(struct Node));
            temp1->data =  0;
            temp1->next= head2;
            head2 = temp1;
        }
        if(temp11 ==NULL)
        {
            temp11 = (struct Node*)malloc(sizeof(struct Node));
            temp11->data =  0;
            temp11->next= head3;
            head3 = temp11;
        }
        int sum1 =  temp11->data+ temp1->data;

        if(tempvalue<=sum1)
        {
            temp = (struct Node*)malloc(sizeof(struct Node));
            temp->data = sum1;
            temp->next= head;
            head= temp;
        }
        tempvalue= sum1;
        temp11= temp11->next;
        temp1=temp1->next;
    }
    Node *h = NULL;
    struct Node *t ;

    struct Node *per = temp;
    while(per!=NULL)
    {
        t = (struct Node*)malloc(sizeof(struct Node));

        t->data = per->data;
        t->next = h;
        h = t;
        per = per->next;
    }
    return t;
}


void print(Node* head)
{
    Node* temp = head;
    while(temp != NULL)
    {
        cout << temp->data<<" ";
        temp = temp->next;
    }
    cout<<endl;
}

int main()
{
    int arr1[] = {1,5,20,500,400,1000};
    int arr1Len = sizeof(arr1)/sizeof(arr1[0]);
    Node* ll1 = createList(arr1,arr1Len);
    print(ll1);

    int arr2[] = {20,10,50,400,900,105,190204105};
    int arr2Len = sizeof(arr2)/sizeof(arr2[0]);
    Node* ll2 = createList(arr2,arr2Len);
    print(ll2);

    cout<<endl;
    cout<<"New List: ";
    Node* newll = sortedMerge(ll1,ll2);
    print(newll);

    return 0;
    //Written by Symum, AUST CSE (BATCH-44)
}
